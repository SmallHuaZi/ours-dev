# Define an action to convert an ELF file to a raw binary image file.
# Parameters
#   Deps 
#       Required: Dependencies leading to a linking target (e.g. executable).
#   OutName
#       Optional: Basename of the output file.
#       Type: string
#       Default: $target_name
function(make_image image_name)
    # 定义参数类型
    set(oneValueArgs TARGET)
    set(multiValueArgs DEPENDS)
    
    # 解析参数
    cmake_parse_arguments(
        MakeImage           # 前缀
        "${options}"        # 选项参数
        "${oneValueArgs}"   # 单值参数
        "${multiValueArgs}" # 多值参数
        ${ARGN}             # 输入参数
    )

    # 检查必要参数
    if(NOT MakeImage_TARGET)
        message(FATAL_ERROR "Missing required argument: TARGET")
    endif()

    # 获取目标文件的路径（使用生成器表达式）
    set(ExeName "$<TARGET_FILE_NAME:${MakeImage_TARGET}>")
    set(ExeDir "$<TARGET_FILE_DIR:${MakeImage_TARGET}>")
    set(ExePath "$<TARGET_FILE:${MakeImage_TARGET}>")
    set(ImageName ${image_name}.image)

    # 定义生成镜像的自定义命令
    add_custom_command(
        OUTPUT ${ImageName}
        COMMAND ${CMAKE_COMMAND} -E echo "Generating binary image for target ${MakeImage_TARGET}"
        COMMAND ${CMAKE_OBJCOPY} -O binary "${ExeName}" "${ImageName}"
        WORKING_DIRECTORY "${ExeDir}"
        COMMENT "Generating binary image: ${ImageName}"
        VERBATIM
    )

    set(IMAGE_PATH "$<TARGET_FILE_DIR:${MakeImage_TARGET}>/${ImageName}")
    set(HEADER_CONTENT 
        "// Auto-generated by CMake\n#ifndef IMAGE_HPP\n#define IMAGE_HPP 1\n
        #define IMAGE_FILE \"${IMAGE_PATH}\"\n#endif // #ifndef IMAGE_HPP\n"
    )
    # 生成头文件的目标路径
    set(HeaderGen "${CMAKE_BINARY_DIR}/gen/${image_name}.hpp")
    file(GENERATE OUTPUT ${HeaderGen} CONTENT "${HEADER_CONTENT}")

    add_custom_target(${image_name}
        COMMAND ${CMAKE_COMMAND} -E echo "Generating image" 
        DEPENDS ${MakeImage_TARGET} ${ImageName} ${HeaderGen}
        WORKING_DIRECTORY "${ExeDir}"
    )
endfunction()