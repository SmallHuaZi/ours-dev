{
    "folders": [
        {
            "path": ".",
        }
    ],
    "extensions": {
        "recommendations": [
            // The official LSP for Rust, rust-analyzer.
            "rust-lang.rust-analyzer",

            // The Python extensions
            "ms-python.python",
            "ms-python.vscode-pylance",

            // The official Clang LSP for C/C++.
            "llvm-vs-code-extensions.vscode-clangd",

            // CMake
            "twxs.cmake",
            "ms-vscode.cmake-tools",
        ],
        "unwantedRecommendations": [
          // Conflicts with vscode-clangd intellisense, and vscode-clangd is the
          // preferred C++ extension.
          "ms-vscode.cpptools",

          // Redundant and conflicts with gnls, which is preferred.
          "npclaudiu.vscode-gn",

          // Redundant and conflicts with gnls, which is preferred.
          "persidskiy.vscode-gnformat",

          "fuchsia-authors.language-fidl",
          "fuchsia-authors.vscode-fuchsia",
          "akiramiyakoda.cppincludegu",
          "golang.go",
          
        ],
    },
    "settings": {
        "todo-tree.tree.autoRefresh": true,
        "todo-tree.highlights.customHighlight": {
            "WARN": {
                "foreground": "#3a3a3e",
                "background": "#FFA500",
                "iconColour": "#FFA500",
                "icon": "alert",
                "type": "tag"
            },
            "TODO": {
                "foreground": "#3a3a3e",
                "background": "#00bb5a",
                "iconColour": "#00bb5a",
                "icon": "check",
                "type": "tag"
            },
            "FIXME": {
                "foreground": "#3a3a3e",
                "background": "#ff0303",
                "iconColour": "#e03131",
                "icon": "bug"
            },
            "REVIEW": {
                "foreground": "#3a3a3e",
                "background": "#2770d5",
                "iconColour": "#2770d5",
                "icon": "eye"
            },
            "HACK": {
                "foreground": "#3a3a3e",
                "background": "#f200ff",
                "iconColour": "#f200ff",
                "icon": "alert"
            },
            "REF": {
                "foreground": "#3a3a3e",
                "background": "#aaaaf3",
                "iconColour": "#aaaaf3",
                "icon": "link",
                "type": "tag"
            }
        },
        "todo-tree.general.tags": [
            "BUG",
            "HACK",
            "HINT",
            "WARN",
            "FIXME",
            "TODO",
            "XXX",
            "REVIEW",
            "REF",
        ],
        "todo-tree.general.tagGroups": {
            "BUG": ["BUG", "FIXME"]
        },

        "editor.defaultFormatter": "xaver.clang-format",
        "editor.rulers": [
            130
        ],
        "editor.tokenColorCustomizations": {
            "textMateRules": [
                {
                    "scope": "entity.name.function",
                    "settings": {
                        "fontStyle": "underline"
                    },
                },
            ],
        },
        "editor.semanticTokenColorCustomizations": {
            "rules": {
                "macro": {
                    "underline": false
                },
                "function": {
                    "underline": true
                }
            }
        },
        "files.associations": {
            "*.tcc": "cpp",
        },
        "search.exclude": {
            "**/target/**": true,
            "**/.idea/**": true,
            "**/cmake-build-debug/**": true,
        },
        "search.useIgnoreFiles": true,
        "files.exclude": {
            "**/**.iso": true,
            "**/.git": true,
            "**/.idea": true,
            "**/__pycache__": true,
            "**/cmake-build-debug": true,
        },

        // Plugins
        "clangd.enable": true,
        "clangd.arguments": [
            // compile_commands.json
            "--compile-commands-dir=${workspaceFolder}/target",	//指定输出json文件的路径
            "--all-scopes-completion",                          //所有作用域补全
            "--background-index",                               //后台索引，并持久化到磁盘中
            "--completion-style=detailed",                      //补全/建议风格：打包，可选detailed
            "--enable-config",                                  //支持从yaml文件中读取配置
            "--function-arg-placeholders=true",	                //自动补全函数参数占位符
            "--log=verbose",                                    //日志类型
            "--pch-storage=disk",                               //pch优化的位置，支持memory和disk
            "--pretty",                                         //对输出的json文件格式化
            "--ranking-model=decision_forest",                  //排序模型
            "-j=4",                                             //clangd任务执行的线程数
            "--clang-tidy",                                     //代码静态检查
            "--background-index-priority=normal",               //后台索引优先级
            "--parse-forwarding-functions"	,
            "--query-driver=$env{c++}",
            "--limit-results=100",
            "--header-insertion=never"
        ],
        "cmake.buildDirectory": "${workspaceFolder}/target",
        "cmake.default.buildDirectory": "${workspaceFolder}/target/build",
        "cmake.copyCompileCommands": "${workspaceFolder}/target/compile_commands.json",
        "cmake.debugConfig": {
            "MIMode": "lldb",
            "miDebuggerPath": "lldb-dap-18"
        },
        "clangd.path": "clangd-21",
        "editor.lineNumbers": "on",
        "editor.cursorBlinking": "smooth",
        "vim.smartRelativeLine": false,
        "vim.cursorStylePerMode.insert": "line",
        "lldb.displayFormat": "auto",
        "lldb.dereferencePointers": true,
        "lldb.consoleMode": "commands",
        "lldb.showDisassembly": "auto",
        "editor.fontFamily": "'Fira Code'",
        "editor.codeLensFontFamily": "'Fira Code'",
        "editor.fontLigatures": true,
    },

    // Tasks run with the "Tasks: Run Task" command (bind a shortcut!).
    "tasks": {
        "version": "2.0.0",
        "tasks": [
            {
                "label": "Launch VM",
                "type": "shell",
                "isBackground": true,
                "linux": {
                    "command": "${workspaceFolder}/scripts/shell/prelaunch.sh",
                },
                "problemMatcher": {
                    "pattern" : {
                        "regexp": ".",
                        "file": 1,      // 第1组匹配文件名
                        "line": 2,      // 第2组匹配行号
                        "column": 3,    // 第3组匹配列号
                        "severity": 4,  // 第4组匹配错误级别（error/warning）
                        "message": 5    // 第5组匹配错误信息
                    },
                    "background": {
                        "activeOnStart": true,
                        "beginsPattern": "(Start debug)",
                        "endsPattern": ".",
                    }
                }
            },
            {
                "label": "SetUp",
                "type": "shell",
                "dependsOn": [
                    "Launch VM",
                ]
            },
            {
                "label": "TearDown",
                "type": "shell",
                "linux":{
                    "command": "killall qemu-system-x86_64"
                }
            }
        ]
    },
    "launch": {
        "version": "0.2.0",
        "configurations": [
            {
                "name": "Debug Test",
                "type": "lldb",
                "request": "launch",
                // ${command:cmake.getLaunchTargetDirectory}
                "program": "${command:cmake.getLaunchTargetDirectory}/${input:SelectTestProgram}",
                "preLaunchTask": "Build",
                "args": [
                    // "create",
                    // "-t", "kpkg",
                    // "-o", "target/build/Clang-18-x86_64-pc-linux-gnu/ours.kpkg",
                    // "kpkg",
                    // "-p", "target/build/Clang-18-x86_64-pc-linux-gnu/ours.kpkg",
                    // "--add", "target/build/Clang-18-x86_64-pc-linux-gnu/kernel_main",
                    // "-e", "-t", "elf", "-o", "mmod.elf"
                    "create",
                    "-f", "target/build/Clang-18-x86_64-pc-linux-gnu/ours.kpkg",
                    "-t", "cont",
                    "-o", "target/build/Clang-18-x86_64-pc-linux-gnu/ours.obi",
                ]
            },
            {
                "name": "Remote launch",
                "type": "lldb-dap",
                "request": "attach",
                "program": "${command:cmake.launchTargetPath}",
                "gdb-remote-port": 1234,
                "initCommands": [
                    "lldb-dap repl-mode command"
                ],
                "preRunCommands": [
                    "target modules add ${workspaceFolder}/target/build/Clang-18-x86_64-pc-linux-gnu/kernel_main",
                    "target modules load --file kernel_main --slide 0xffffff8840000000",
                    "command script import ${workspaceFolder}/scripts/lldb/parse_pt.py",
                    "command script import ${workspaceFolder}/scripts/lldb/rsdp2srat.py",
                ],
                "preLaunchTask": "SetUp",
                "postDebugTask": "TearDown"
            },
        ],
        "inputs": [
            {
                "id": "SelectTestProgram",
                "type": "promptString",
                "description": "Selece a test program to debug"
            }
        ],
        "compounds": []
    }
}
