/// Copyright(C) 2024 smallhuazi
///
/// This program is free software; you can redistribute it and/or modify
/// it under the terms of the GNU General Public License as published
/// by the Free Software Foundation; either version 2 of the License, or
/// (at your option) any later version.
///
/// For additional information, please refer to the following website:
/// https://opensource.org/license/gpl-2-0
///

#ifndef ARCH_INTERRUPT_HPP
#define ARCH_INTERRUPT_HPP 1

#include <arch/types.hpp>

namespace arch {
    enum class IrqVector: u32 {
        DivideError = 0,
        Debug = 1,
        Nmi = 2,
        Breakpoint = 3,
        Overflow = 4,
        BoundRangeExceeded = 5,
        InvalidOpcode = 6,
        DeviceNotAvailable = 7,
        DoubleFault = 8,
        CoprocessorSegmentOverrun = 9,
        InvalidTss = 10,
        SegmentNotPresent = 11,
        StackFaultException = 12,
        GeneralProtection = 13,
        PageFault = 14,
        X87FloatingPoint = 16,
        AlignmentCheck = 17,
        MachineCheck = 18,
        SimdFloatingPoint = 19,
        Virtualizatoin = 20,
        ControlProtection = 21,

        // 22..31 are reserved for hardware, but not yet specified by Intel.

        // 32..255 are only generated by `INT $n` instructions or APIC programming,
        // not by the CPU directly.
        FirstUserDefined = 32,
        LastUserDefined = 255,
    };

    enum class Regs: u8 {
        Ax,
        Bx,
        Cx,
        Dx,
        Di,
        Si,
        Bp,
        Ds,
        Es,
        Fs,
        Gs,
        Ip,
        Cs,
        Flags,
        Sp,
        Ss,
    };

    struct IrpFrame {
        template <typename Int>
        auto get(Regs reg) -> Int
        {}

        template <typename Int>
        auto set(Regs reg) -> Int
        {}

        usize common_regs[15];
        usize error_code;
    };

    struct InterruptFrame {
        u64 rip;
        u64 cs;
        u64 rflags;
        u64 rsp;
        u64 ss;
    };

} // namespace arch

#endif // #ifndef ARCH_INTERRUPT_HPP